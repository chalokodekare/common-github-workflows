name: Black Duck Scan

# Controls when the workflow will run
on:
  # Triggers the workflow on 'push on main branch' or 'PR against main branch'.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      gradleArgs:
        description: 'Gradle args'
        required: false
        default: ''

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'PREP - GitHub context'
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: 'SETUP - Checkout Branch Code'
        uses: actions/checkout@v2

      - name: 'Provides environment variables from .env file.'
        id: dotenv
        uses: falti/dotenv-action@v0.2.6
        with:
          path: .github/workflows/.env
          log-variables: true

      - name: "Set up Java ${{ steps.dotenv.outputs.JAVA_VERSION }}"
        uses: actions/setup-java@v2
        with:
          java-version: "${{ steps.dotenv.outputs.JAVA_VERSION }}"
          distribution: '${{ steps.dotenv.outputs.JAVA_DISTRIBUTION }}'

      - name: 'GRANT PERMISSION - Grant execute permission for gradlew'
        run: chmod +x gradlew

      - name: 'SETUP - Cache Gradle packages'
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 'SETUP - gradle.properties'
        run: |
          echo "artifactoryContextUrl=${{ secrets.ARTIFACTORY_CONTEXT_URL }}" >> gradle.properties
          echo "artifactoryUsername=${{ secrets.ARTIFACTORY_USER }}" >> gradle.properties
          echo "artifactoryPassword=${{ secrets.ARTIFACTORY_TOKEN }}" >> gradle.properties

      - name: "BUILD - Build with Gradle"
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x test ${{ inputs.gradleArgs }}

      - name: 'RUN- Perform Blackduck scan'
        id: bd-scan
        uses: blackducksoftware/github-action@v2
        with:
          version: 7
          args: '--blackduck.url="${{ secrets.BLACKDUCK_URL }}"
          --blackduck.api.token="${{ secrets.BLACKDUCK_TOKEN }}"
          --detect.project.name="${{ steps.dotenv.outputs.REPOSITORY_NAME }}"
          --detect.project.version.name=master
          --detect.risk.report.pdf=true
          --detect.wait.for.results=true
          --detect.timeout=1800
          --detect.policy.check.fail.on.severities=BLOCKER,CRITICAL'

      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v1
        if: always() && steps.bd-scan.outcome != 'success'
        with:
          message: |
            &#10060;&#10060;&#10060;There is a security issue with one of you vulnerability scan.&#10060;&#10060;&#10060;
            &#10060;&#10060;&#10060;Please open the Blackduck artifact of this run to remedy the issue.&#10060;&#10060;&#10060;
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v3
        if: always() && steps.bd-scan.outcome != 'success'
        with:
          name: blackduck-report
          path: '*.pdf'

      - name: Notify Teams Channel
        uses: aliencube/microsoft-teams-actions@v0.8.0
        with:
          webhook_uri: ${{ secrets.BLACKDUCK_MS_TEAMS_WEBHOOK }}
          title: "${{ steps.dotenv.outputs.REPOSITORY_NAME }} : SUCCESSFUL"
          summary: "${{ steps.dotenv.outputs.REPOSITORY_NAME }} : SUCCESSFUL"
